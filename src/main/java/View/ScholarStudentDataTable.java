package View;

import Controller.STEMScholarDAO;
import Controller.STEMScholarDAOExcel;
import Controller.STEMScholarDAOText;
import Controller.STEMStudentDAO;
import Controller.STEMStudentDAOExcel;
import Controller.STEMStudentDAOText;
import Model.Student;
import Model.STEMScholar;
import Model.STEMStudent;
import java.util.ArrayList;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 */
public class ScholarStudentDataTable extends javax.swing.JDialog {

    private STEMScholarDAO scholarDao;
    private STEMStudentDAO studentDao;
    private TreeMap<String,Student> scholars;
    private TreeMap<String,Student> students;
    private ArrayList<String[]> data = new ArrayList<>();
    private String[] colNames;
    
    /**
     * Creates new form ScholarStudentDataTable
     */
    public ScholarStudentDataTable(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Data Table");
        this.setLocationRelativeTo(null);
        this.scholarDao = new STEMScholarDAOText();
        this.studentDao = new STEMStudentDAOText();
        this.scholars = this.scholarDao.getMap();
        this.students = this.studentDao.getMap();
        this.colNames = new String[]{"ID", "Name", "Major", "GPA", "Gender", "Race", "Ethnicity"};
        // Stores relevant data of scholars into data
        for (Map.Entry student : this.scholars.entrySet())
        {
            STEMScholar s = (STEMScholar) student.getValue();
            String[] sParts = {s.getStudentID(), s.getFullName(), s.getMajor(), 
                Double.toString(s.getGpa()), s.getGender(), s.getRace(), s.getEthnicity()};
            this.data.add(sParts);
        }
        // Stores relevant data of students into data
        for (Map.Entry student : this.students.entrySet())
        {
            STEMStudent s = (STEMStudent) student.getValue();
            String[] sParts = {s.getStudentID(), s.getFullName(), s.getMajor(), 
                Double.toString(s.getGpa()), s.getGender(), s.getRace(), s.getEthnicity()};
            this.data.add(sParts);
        }
        // Creates a rectangular array as the data to be passed for TableModel
        String[][] data = new String[this.data.size()][this.colNames.length];
        for (int j = 0; j < data.length; j++)
        {
            data[j] = this.data.get(j);
        }
        // Overrident DefaultTableModel to dissallow cell editing
        DefaultTableModel model = new DefaultTableModel(data, this.colNames)
        {
            // override default behavior of isCellEditable to declare all cells uneditable
            @Override
            public boolean isCellEditable(int row, int column) 
            {
                return false;
            }
        };// end of model as overriden DefaultTableModel
        // Populate DataTable with model
        this.jDataTable.setModel(model);
        // Sets max width of specific static length columns, saves space
        this.jDataTable.getColumn("ID").setMaxWidth(100);
        this.jDataTable.getColumn("GPA").setMaxWidth(45);
        this.jDataTable.getColumn("Gender").setMaxWidth(60);
        // Adds sorter, handles sorting in ascending/descending order for all columns
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jDataTable.getModel());
        jDataTable.setRowSorter(sorter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jDataTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Major", "GPA", "Gender", "Race", "Ethnicity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jDataTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScholarStudentDataTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScholarStudentDataTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScholarStudentDataTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScholarStudentDataTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ScholarStudentDataTable dialog = new ScholarStudentDataTable(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable jDataTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
